
. 
.   *this runs the regression narr86 = alpha + beta1*ptime86 + beta2*qemp86 + ..... + erro
> r
.   *you'll get a bunch of output, and not all of them are necessary. The only things you 
> need to focus on are the "Coefficient" and P > |t| columns. 
.   *For a continuous x variable, increasing x by 1 unit (replace x with the variable name
>  and "unit" with the actual unit of measurement of x), would increase(if coefficient is 
> positive) or decrease (if coefficient is negative) y (replace with actual y variable) by
>  <coefficient> (replace with actual coefficient) units (replace with actual unit of meas
> urement of y), on average, holding all else constant. For a dummy x variable, the coeffi
> cient gives the average difference in y for group x=1 (for ex: hispanic people) compared
>  to group x=0 (non-hispanic people), on average, holding all else constant.
.   reg narr86 ptime86 qemp86 pcnv avgsen black hispan

      Source |       SS           df       MS      Number of obs   =     2,725
-------------+----------------------------------   F(6, 2718)      =     31.64
       Model |  131.263976         6  21.8773294   Prob > F        =    0.0000
    Residual |  1879.08318     2,718  .691347748   R-squared       =    0.0653
-------------+----------------------------------   Adj R-squared   =    0.0632
       Total |  2010.34716     2,724  .738012906   Root MSE        =    .83147

------------------------------------------------------------------------------
      narr86 | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
     ptime86 |  -.0410801   .0087099    -4.72   0.000    -.0581587   -.0240014
      qemp86 |  -.0948079   .0103787    -9.13   0.000    -.1151589   -.0744569
        pcnv |  -.1302674   .0404823    -3.22   0.001    -.2096466   -.0508882
      avgsen |   .0037499   .0047038     0.80   0.425    -.0054736    .0129733
       black |   .3379116   .0454962     7.43   0.000      .248701    .4271221
      hispan |   .2030002   .0397959     5.10   0.000      .124967    .2810334
       _cons |   .5848454   .0359875    16.25   0.000     .5142798    .6554111
------------------------------------------------------------------------------

. 
.   *drop arr is telling stata to drop a variable called "arr" if it exists. If it doesn't
>  exist Stata throws up an error saying this.
.   *So you add "capture" to tell stata to ignore the error and run past it.
.   capture drop arr

.   *the below steps are self-explanatory. To understand what it is doing. Go to the stata
>  main window. Type "browse" - your data window should pop up now. Then come back to this
>  do-file and run the next 3 lines one by one. Each time you run a command, go to the dat
> a window and try to spot what has changed.
.   gen arr=.
(2,725 missing values generated)

.   replace arr=1 if narr86>0
(755 real changes made)

.   replace arr=0 if narr86==0
(1,970 real changes made)

.   
.   *I have given notes on what the below command means in the previous week's do file: ps
> 9.do.
.   ta arr

        arr |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      1,970       72.29       72.29
          1 |        755       27.71      100.00
------------+-----------------------------------
      Total |      2,725      100.00

.   
.  *the below code block, does the exact same thing as above, but in a different way. The 
> above version is easier to read and understand, the below version is slightly mind-bendy
> , but has the advantage of being short. See what works for you. Regardless of what you d
> o, it's always good practice to comment on what you're doing as you go along. Just like 
> how I'm commenting. It is very likely that you yourself don't understand what you've don
> e (it happens to me a lot). So comments are helpful.
. *The below code is telling stata, if narr86>0 is true (True in computer language has the
>  number "1" attached to it), then generate arr_v2 (v2 stands for version 2), to take the
>  value 1. If narr86>0 is false (false = 0 in computer language), then assign 0 to arr_v2
> .
.  * * * * * * Aside * * * * * * * * 
.  gen arr_v2 = narr86>0

.  tab arr_v2

     arr_v2 |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      1,970       72.29       72.29
          1 |        755       27.71      100.00
------------+-----------------------------------
      Total |      2,725      100.00

. * * * * * * * * * * * * * * * * * 
. 
. *here be very careful, and note that the y variable is a dummy. For a continuous x varia
> ble, increasing x by 1 unit (replace x with the variable name and "unit" with the actual
>  unit of measurement of x), would increase(if coefficient is positive) or decrease (if c
> oefficient is negative) the probability that y = 1, on average, holding all else constan
> t. For a dummy x variable, the coefficient gives the probability that y=1, if x=1, on av
> erage, holding all else constant.
.   reg arr ptime86 qemp86 pcnv avgsen black hispan

      Source |       SS           df       MS      Number of obs   =     2,725
-------------+----------------------------------   F(6, 2718)      =     33.10
       Model |   37.169894         6  6.19498233   Prob > F        =    0.0000
    Residual |   508.64662     2,718  .187140037   R-squared       =    0.0681
-------------+----------------------------------   Adj R-squared   =    0.0660
       Total |  545.816514     2,724   .20037317   Root MSE        =     .4326

------------------------------------------------------------------------------
         arr | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
     ptime86 |  -.0240885   .0045315    -5.32   0.000    -.0329742   -.0152029
      qemp86 |   -.038419   .0053998    -7.11   0.000    -.0490072   -.0278309
        pcnv |   -.152145    .021062    -7.22   0.000    -.1934443   -.1108458
      avgsen |   .0015499   .0024473     0.63   0.527    -.0032489    .0063486
       black |   .1697458   .0236706     7.17   0.000     .1233316    .2161601
      hispan |   .0960086   .0207049     4.64   0.000     .0554097    .1366075
       _cons |   .3803173   .0187235    20.31   0.000     .3436036     .417031
------------------------------------------------------------------------------

.   
.   reg arr ptime86 qemp86 pcnv avgsen black hispan

      Source |       SS           df       MS      Number of obs   =     2,725
-------------+----------------------------------   F(6, 2718)      =     33.10
       Model |   37.169894         6  6.19498233   Prob > F        =    0.0000
    Residual |   508.64662     2,718  .187140037   R-squared       =    0.0681
-------------+----------------------------------   Adj R-squared   =    0.0660
       Total |  545.816514     2,724   .20037317   Root MSE        =     .4326

------------------------------------------------------------------------------
         arr | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
     ptime86 |  -.0240885   .0045315    -5.32   0.000    -.0329742   -.0152029
      qemp86 |   -.038419   .0053998    -7.11   0.000    -.0490072   -.0278309
        pcnv |   -.152145    .021062    -7.22   0.000    -.1934443   -.1108458
      avgsen |   .0015499   .0024473     0.63   0.527    -.0032489    .0063486
       black |   .1697458   .0236706     7.17   0.000     .1233316    .2161601
      hispan |   .0960086   .0207049     4.64   0.000     .0554097    .1366075
       _cons |   .3803173   .0187235    20.31   0.000     .3436036     .417031
------------------------------------------------------------------------------

.   capture drop yhat

.   predict yhat  // generate the predicted values: for a single linear regression, the pr
> edicted values are basically the line that you draw through the data points.
(option xb assumed; fitted values)

.                                 //yhat contains everything in the regression equation ex
> cept the error term. So the true data minus predicted values, gives you the error term.
.   sum yhat, d //d stands for "detail"

                        Fitted values
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0655473      -.0608903
 5%     .0744961      -.0608903
10%     .1129152      -.0608903       Obs               2,725
25%     .2148523      -.0357646       Sum of wgt.       2,725

50%     .2650602                      Mean           .2770642
                        Largest       Std. dev.      .1168132
75%     .3610688       .5500631
90%      .434806       .5500631       Variance       .0136453
95%     .4763259       .5881905       Skewness       .1080548
99%     .5500631       .5971799       Kurtosis       2.668411

.   count if (yhat<0 | yhat>1)
  8

.   
.   reg arr ptime86 qemp86 pcnv avgsen black hispan

      Source |       SS           df       MS      Number of obs   =     2,725
-------------+----------------------------------   F(6, 2718)      =     33.10
       Model |   37.169894         6  6.19498233   Prob > F        =    0.0000
    Residual |   508.64662     2,718  .187140037   R-squared       =    0.0681
-------------+----------------------------------   Adj R-squared   =    0.0660
       Total |  545.816514     2,724   .20037317   Root MSE        =     .4326

------------------------------------------------------------------------------
         arr | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
     ptime86 |  -.0240885   .0045315    -5.32   0.000    -.0329742   -.0152029
      qemp86 |   -.038419   .0053998    -7.11   0.000    -.0490072   -.0278309
        pcnv |   -.152145    .021062    -7.22   0.000    -.1934443   -.1108458
      avgsen |   .0015499   .0024473     0.63   0.527    -.0032489    .0063486
       black |   .1697458   .0236706     7.17   0.000     .1233316    .2161601
      hispan |   .0960086   .0207049     4.64   0.000     .0554097    .1366075
       _cons |   .3803173   .0187235    20.31   0.000     .3436036     .417031
------------------------------------------------------------------------------

.   capture drop resid   // generate the residuals

.   predict resid, resid //the resid option helps you find the residuals

.   histogram resid
(bin=34, start=-.59717989, width=.04478482)

. 
.   reg arr ptime86 qemp86 pcnv avgsen black hispan

      Source |       SS           df       MS      Number of obs   =     2,725
-------------+----------------------------------   F(6, 2718)      =     33.10
       Model |   37.169894         6  6.19498233   Prob > F        =    0.0000
    Residual |   508.64662     2,718  .187140037   R-squared       =    0.0681
-------------+----------------------------------   Adj R-squared   =    0.0660
       Total |  545.816514     2,724   .20037317   Root MSE        =     .4326

------------------------------------------------------------------------------
         arr | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
     ptime86 |  -.0240885   .0045315    -5.32   0.000    -.0329742   -.0152029
      qemp86 |   -.038419   .0053998    -7.11   0.000    -.0490072   -.0278309
        pcnv |   -.152145    .021062    -7.22   0.000    -.1934443   -.1108458
      avgsen |   .0015499   .0024473     0.63   0.527    -.0032489    .0063486
       black |   .1697458   .0236706     7.17   0.000     .1233316    .2161601
      hispan |   .0960086   .0207049     4.64   0.000     .0554097    .1366075
       _cons |   .3803173   .0187235    20.31   0.000     .3436036     .417031
------------------------------------------------------------------------------

.   *the below command tests for heteroskedasticity (whether the error variance is constan
> t) in a model where you have all the listed "x" variables on the right hand side. F(k, n
> -k-1) is the test statistic, F is the critical value. If Probability of getting a test s
> tatistic > critical value with this data is approximately = 0 then we can reject the nul
> l of constant variance. To understand what an F test does in plain English, see my comme
> nts on ps9.do (the previous problem set). You should also see the below section that say
> s "running the above test manually" 
.   estat hettest ptime86 qemp86 pcnv avgsen black hispan, fstat

Breusch–Pagan/Cook–Weisberg test for heteroskedasticity 
Assumption: i.i.d. error terms
Variables: ptime86 qemp86 pcnv avgsen black hispan

H0: Constant variance

F(6, 2718) =  37.99
  Prob > F = 0.0000

. 
. * running the above test manually:
.         *the above estat hettest does many calculation in one go. The below block of cod
> e starting with reg, and ending with the test command does the exact same as estat hette
> st.
. 
.   reg arr ptime86 qemp86 pcnv avgsen black hispan

      Source |       SS           df       MS      Number of obs   =     2,725
-------------+----------------------------------   F(6, 2718)      =     33.10
       Model |   37.169894         6  6.19498233   Prob > F        =    0.0000
    Residual |   508.64662     2,718  .187140037   R-squared       =    0.0681
-------------+----------------------------------   Adj R-squared   =    0.0660
       Total |  545.816514     2,724   .20037317   Root MSE        =     .4326

------------------------------------------------------------------------------
         arr | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
     ptime86 |  -.0240885   .0045315    -5.32   0.000    -.0329742   -.0152029
      qemp86 |   -.038419   .0053998    -7.11   0.000    -.0490072   -.0278309
        pcnv |   -.152145    .021062    -7.22   0.000    -.1934443   -.1108458
      avgsen |   .0015499   .0024473     0.63   0.527    -.0032489    .0063486
       black |   .1697458   .0236706     7.17   0.000     .1233316    .2161601
      hispan |   .0960086   .0207049     4.64   0.000     .0554097    .1366075
       _cons |   .3803173   .0187235    20.31   0.000     .3436036     .417031
------------------------------------------------------------------------------

.   capture drop resid

.   predict resid, residuals  // generate the residuals

.   capture drop resid2

.   gen resid2=resid^2  // square the residuals

.   reg resid2 ptime86 qemp86 pcnv avgsen black hispan

      Source |       SS           df       MS      Number of obs   =     2,725
-------------+----------------------------------   F(6, 2718)      =     37.99
       Model |  8.09320854         6  1.34886809   Prob > F        =    0.0000
    Residual |  96.5174065     2,718  .035510451   R-squared       =    0.0774
-------------+----------------------------------   Adj R-squared   =    0.0753
       Total |  104.610615     2,724  .038403309   Root MSE        =    .18844

------------------------------------------------------------------------------
      resid2 | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
     ptime86 |  -.0131427    .001974    -6.66   0.000    -.0170133   -.0092721
      qemp86 |  -.0176597   .0023522    -7.51   0.000     -.022272   -.0130474
        pcnv |  -.0887102   .0091748    -9.67   0.000    -.1067004   -.0707199
      avgsen |   .0009864   .0010661     0.93   0.355    -.0011039    .0030768
       black |   .0494357   .0103111     4.79   0.000     .0292173     .069654
      hispan |   .0418091   .0090192     4.64   0.000     .0241239    .0594943
       _cons |   .2465775   .0081561    30.23   0.000     .2305848    .2625703
------------------------------------------------------------------------------

.   test ptime86 qemp86 pcnv avgsen black hispan

 ( 1)  ptime86 = 0
 ( 2)  qemp86 = 0
 ( 3)  pcnv = 0
 ( 4)  avgsen = 0
 ( 5)  black = 0
 ( 6)  hispan = 0

       F(  6,  2718) =   37.99
            Prob > F =    0.0000

. 
.   *the robust option tells stata to expect heteroskedasticity and to account for it
.   reg arr ptime86 qemp86 pcnv avgsen black hispan   // non-robust s.e.s

      Source |       SS           df       MS      Number of obs   =     2,725
-------------+----------------------------------   F(6, 2718)      =     33.10
       Model |   37.169894         6  6.19498233   Prob > F        =    0.0000
    Residual |   508.64662     2,718  .187140037   R-squared       =    0.0681
-------------+----------------------------------   Adj R-squared   =    0.0660
       Total |  545.816514     2,724   .20037317   Root MSE        =     .4326

------------------------------------------------------------------------------
         arr | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
     ptime86 |  -.0240885   .0045315    -5.32   0.000    -.0329742   -.0152029
      qemp86 |   -.038419   .0053998    -7.11   0.000    -.0490072   -.0278309
        pcnv |   -.152145    .021062    -7.22   0.000    -.1934443   -.1108458
      avgsen |   .0015499   .0024473     0.63   0.527    -.0032489    .0063486
       black |   .1697458   .0236706     7.17   0.000     .1233316    .2161601
      hispan |   .0960086   .0207049     4.64   0.000     .0554097    .1366075
       _cons |   .3803173   .0187235    20.31   0.000     .3436036     .417031
------------------------------------------------------------------------------

.   reg arr ptime86 qemp86 pcnv avgsen black hispan, robust  // robust s.e.s

Linear regression                               Number of obs     =      2,725
                                                F(6, 2718)        =      39.52
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0681
                                                Root MSE          =      .4326

------------------------------------------------------------------------------
             |               Robust
         arr | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
     ptime86 |  -.0240885   .0028618    -8.42   0.000       -.0297   -.0184771
      qemp86 |   -.038419   .0054487    -7.05   0.000     -.049103   -.0277351
        pcnv |   -.152145   .0191337    -7.95   0.000    -.1896632   -.1146269
      avgsen |   .0015499   .0025258     0.61   0.540    -.0034028    .0065026
       black |   .1697458   .0257972     6.58   0.000     .1191617      .22033
      hispan |   .0960086   .0212977     4.51   0.000     .0542473    .1377699
       _cons |   .3803173   .0196795    19.33   0.000      .341729    .4189056
------------------------------------------------------------------------------

. 
.   *find these numbers on the regression results table, then find the formula sheet on Mo
> odle>EC203>Revision Material>Formula Sheet.pdf
.   *then look for "Tests for regression slope coefficient", and connect these numbers to 
> the stata output and the formula.
.   *This command produces the output: -8.4172549. See if you can find a number that is ap
> proximately equal to this value in the regression table
.   display -0.0240885/0.0028618
-8.4172549

. 
.   
.   log close
      name:  <unnamed>
       log:  C:\Users\u1972955\Dropbox\TA\EC203\Term 2\ec203-seminars\class10\ps10.log
  log type:  text
 closed on:  31 Jan 2023, 20:16:56
------------------------------------------------------------------------------------------
